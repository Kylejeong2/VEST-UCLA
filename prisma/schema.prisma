generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model blogPost {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  date      String
  author    String
  authorRole String
  authorImage String
  coverImage String
  category String
  readTime String
}

model caseStudy {
  id        String   @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  date      String
  author    String
  authorRole String
  authorImage String
  coverImage String
  category String
  readTime String
}

model WorkRequest {
  id          String   @id @default(uuid())
  type        String   // "VC" or "Startup"
  companyName String
  contactName String
  email       String
  companyInfo String   @db.Text
  requirements String  @db.Text
  status      String   @default("pending") // pending, approved, rejected
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
  NEEDS_REVIEW
}


model Application {
  id              String   @id @default(uuid())
  timestamp       DateTime @default(now())
  candidateName   String
  email          String
  responses      Json
  
  // AI Analysis
  firstAnalysis  Json?
  secondAnalysis Json?
  finalStatus    ApplicationStatus @default(NEEDS_REVIEW)
  needsManualReview Boolean @default(true)
  
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Member {
  id              String   @id @default(uuid())
  clerkId         String   @unique  // Clerk user ID
  firstName       String
  lastName        String?
  slug            String   @unique // for the URL (first-last)
  email           String?   @unique
  headshot        String?   // URL to image
  description     String?   @db.Text
  resumeUrl       String?
  linkedinUrl     String?
  projects        Json[]   // Array of project objects
  applicationResponses Json? // Their application responses
  skills          String[] // Array of skills
  isAvailable     Boolean  @default(true)
  lookingFor      String? // full time, summer internship fall internship etc
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  videos          Video[]
}

model Video {
  id          String   @id @default(cuid())
  url         String
  title       String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  member      Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)
  memberId    String
} 